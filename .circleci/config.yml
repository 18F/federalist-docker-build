version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2

jobs:
  test:
    docker:
      - image: circleci/python:3.8
    environment:
      CC_TEST_REPORTER_ID: 449ef357d9e81688685bde0dcdd348bc764d717fa6a4c9c01562bd8037ceb665      
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements-dev.txt

      - run:
          name: Flake8
          command: flake8

      - run:
          name: Bandit
          command: bandit -r src

      - run:
          name: Install cc-test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: CodeClimate before-build
          command: |
            ./cc-test-reporter before-build            

      - run:
          name: Pytest
          command: pytest --cov-report xml:./coverage/coverage.xml --cov-report html:./coverage --cov-report term --cov=src

      - run:
          name: CodeClimate after-build
          command: |
            ./cc-test-reporter format-coverage -t coverage.py ./coverage/coverage.xml
            ./cc-test-reporter upload-coverage || true

      - store_artifacts:
          path: ./coverage/coverage.xml


  build-push-deploy:
    executor: aws-ecr/default

    environment:
      CF_MANIFEST: ./.cloudgov/manifest.yml

    parameters:
      app:
        type: string
      extension:
        default: ""
        type: enum
        enum: ["", "-exp"]
      space:
        type: enum
        enum: ["staging", "production"]
      cf-username:
        type: env_var_name
      cf-password:
        type: env_var_name
      account-url:
        type: env_var_name
      aws-access-key-id:
        type: env_var_name
      aws-secret-access-key:
        type: env_var_name
      region:
        type: env_var_name
      repo:
        type: string
      aws-read-access-key-id:
        type: env_var_name
      aws-read-secret-access-key:
        type: env_var_name        

    steps:
      - aws-ecr/build-and-push-image:
          account-url:           << parameters.account-url >>
          aws-access-key-id:     << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          region:                << parameters.region >>
          dockerfile:            Dockerfile<< parameters.extension >>
          repo:                  << parameters.repo >>
          tag:                   << parameters.space >><< parameters.extension >>

      - run:
          name: Deploy to cloud.gov
          command: |
            ./.cloudgov/deploy.sh
          environment:
            CF_USERNAME:         << parameters.cf-username >>
            CF_PASSWORD:         << parameters.cf-password >>
            CF_SPACE:            << parameters.space >>
            CF_APP:              << parameters.app >>
            CF_VARS_FILE:        ./.cloudgov/vars/<< parameters.space >>.yml
            AWS_ECR_IMAGE:       "<< parameters.account-url >>/<< parameters.repo >>:<< parameters.space >><< parameters.extension >>"
            AWS_ECR_READ_SECRET: $<< parameters.aws-read-access-key-id >>
            AWS_ECR_READ_KEY:    $<< parameters.aws-read-secret-access-key >>


workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test

      - build-push-deploy:
          app:                        federalist-build-container<< matrix.extension >>-staging
          space:                      staging
          cf-username:                CF_USERNAME_STAGING
          cf-password:                CF_PASSWORD_STAGING
          account-url:                AWS_ECR_ACCOUNT_URL_STAGING
          aws-access-key-id:          AWS_ECR_WRITE_KEY_STAGING
          aws-secret-access-key:      AWS_ECR_WRITE_SECRET_STAGING
          region:                     AWS_ECR_REGION_STAGING
          repo:                       $AWS_ECR_REPO_STAGING
          aws-read-access-key-id:     AWS_ECR_READ_KEY_STAGING
          aws-read-secret-access-key: AWS_ECR_READ_SECRET_STAGING
          matrix:
            parameters:
              extension: ["", "-exp"]
          requires:
            - test
          filters:
            branches:
              only: staging

      - build-push-deploy:
          app:                        federalist-build-container<< matrix.extension >>
          space:                      production
          cf-username:                CF_USERNAME_PRODUCTION
          cf-password:                CF_PASSWORD_PRODUCTION
          account-url:                AWS_ECR_URL
          aws-access-key-id:          AWS_ECR_WRITE_KEY
          aws-secret-access-key:      AWS_ECR_WRITE_SECRET
          region:                     AWS_ECR_REGION
          repo:                       federalist/garden-build
          aws-read-access-key-id:     AWS_ECR_READ_KEY
          aws-read-secret-access-key: AWS_ECR_READ_SECRET
          matrix:
            parameters:
              extension: ["", "-exp"]
          requires:
            - test
          filters:
            branches:
              only: main
