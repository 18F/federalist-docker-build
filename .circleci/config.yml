version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2

jobs:
  test:
    docker:
      - image: circleci/python:3.8
    environment:
      CC_TEST_REPORTER_ID: 449ef357d9e81688685bde0dcdd348bc764d717fa6a4c9c01562bd8037ceb665      
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements-dev.txt

      - run:
          name: Flake8
          command: flake8

      - run:
          name: Bandit
          command: bandit -r src

      - run:
          name: Install cc-test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: CodeClimate before-build
          command: |
            ./cc-test-reporter before-build            

      - run:
          name: Pytest
          command: pytest --cov-report xml:./coverage/coverage.xml --cov-report html:./coverage --cov-report term --cov=src

      - run:
          name: CodeClimate after-build
          command: |
            ./cc-test-reporter format-coverage -t coverage.py ./coverage/coverage.xml
            ./cc-test-reporter upload-coverage || true

      - store_artifacts:
          path: ./coverage/coverage.xml


  build-push-deploy:
    executor: aws-ecr/default

    environment:
      CF_MANIFEST: ./.cloudgov/manifest.yml

    parameters:
      app:
        type: string
      extension:
        default: ""
        type: enum
        enum: ["", "-exp"]
      space:
        type: enum
        enum: ["staging", "production"]
      cf-username:
        type: env_var_name
      cf-password:
        type: env_var_name

    steps:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_URL
          aws-access-key-id: AWS_ECR_WRITE_KEY
          aws-secret-access-key: AWS_ECR_WRITE_SECRET
          dockerfile: Dockerfile<< parameters.extension >>
          region: AWS_ECR_REGION
          repo: federalist/garden-build
          tag: << parameters.space >><< parameters.extension >>

      - run:
          name: Setup environment for space '<< parameters.space >>'
          command: |
            echo "export CF_USERNAME=$<< parameters.cf-username >>" >> $BASH_ENV
            echo "export CF_PASSWORD=$<< parameters.cf-password >>" >> $BASH_ENV
            echo "export CF_SPACE=<< parameters.space >>" >> $BASH_ENV
            echo "export CF_APP=<< parameters.app >>" >> $BASH_ENV
            echo "export CF_VARS_FILE=./.cloudgov/vars/<< parameters.space >>.yml" >> $BASH_ENV

      - run:
          name: Deploy to cloud.gov
          command: |
            echo "export AWS_ECR_IMAGE=$AWS_ECR_URL/federalist/garden-build:<< parameters.space >><< parameters.extension >>" >> $BASH_ENV
            ./.cloudgov/deploy.sh


workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test

      - build-push-deploy:
          app: federalist-build-container<< matrix.extension >>-staging
          space: staging
          cf-username: CF_USERNAME_STAGING
          cf-password: CF_PASSWORD_STAGING
          matrix:
            parameters:
              extension: ["", "-exp"]
          requires:
            - test
          filters:
            branches:
              only:
                - staging
                - dc/update-aws-keys

      - build-push-deploy:
          app: federalist-build-container<< matrix.extension >>
          space: production
          cf-username: CF_USERNAME_PRODUCTION
          cf-password: CF_PASSWORD_PRODUCTION
          matrix:
            parameters:
              extension: ["", "-exp"]
          requires:
            - test
          filters:
            branches:
              only: main
